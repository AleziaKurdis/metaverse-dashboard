{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","$","is","target","stat","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","mixins","functional","type","Number","default","max","String","parseInt","content","isGreater","ctx","window","mounted","onObserve","destroyed","i","options","callback","console","onVisible","dirtyTypes","resize","ripple","inheritAttrs","appendOuterIcon","autofocus","clearable","clearIcon","counter","counterValue","filled","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","data","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","VInput","computedColor","color","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","watch","requestAnimationFrame","focus","blur","clearableCallback","$refs","input","genAppendSlot","slot","$slots","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","undefined","attrs","genCounter","attrs$","dark","light","$scopedSlots","$createElement","genControl","genDefaultSlot","genFieldset","genLabel","absolute","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","genInput","listeners","Object","lazyValue","id","on","keydown","onKeyDown","ref","modifiers","quiet","onResize","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","e","$nextTick","onClick","onFocus","document","$emit","onInput","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","updateValue","disableIconRotate","expandIcon","hideActions","hasMousedown","isDisabled","isReadonly","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","toggle"],"mappings":"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","file":"js/chunk-7bcc6a72.43f40138.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.es/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n\n    this.autofocus && this.tryAutofocus()\n\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input ||\n        document.activeElement === this.$refs.input\n      ) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}